{
	"name": "df_transform_hosp_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_source_hos_adm",
						"type": "DatasetReference"
					},
					"name": "dfHospData"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "SourceCountry"
				},
				{
					"dataset": {
						"referenceName": "ds_dimdata",
						"type": "DatasetReference"
					},
					"name": "sourcedimdata"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectReqColumns"
				},
				{
					"name": "lookup"
				},
				{
					"name": "selectRqCol"
				},
				{
					"name": "split1"
				},
				{
					"name": "deriveECDCYearWeek"
				},
				{
					"name": "aggDimData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dfHospData",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCountry",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcedimdata",
				"dfHospData select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqColumns",
				"SelectReqColumns, SourceCountry lookup(SelectReqColumns@country == SourceCountry@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup",
				"lookup select(mapColumn(",
				"          country = SelectReqColumns@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRqCol",
				"selectRqCol split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
				"     disjoint: false) ~> split1@(weekly, daily)",
				"sourcedimdata derive(ecdc_year_week = year + \"-W\" + lpad(week_of_year, 2, \"0\")) ~> deriveECDCYearWeek",
				"deriveECDCYearWeek aggregate(groupBy(ecdc_year_week),",
				"     Week_Start_Date = min(date)) ~> aggDimData"
			]
		}
	}
}